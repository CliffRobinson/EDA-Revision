#!/usr/bin/env node

const config = require('./knexfile').development
const devDb = require('knex')(config)

const cmd = process.argv[2]
const note = process.argv[3]
const text = process.argv[4]

switch (cmd) {
  case 'list':
    getAll()
      .then(listTodos)
      .catch(logError)
      .finally(closeDB)
    break
  case 'done':
    deleteById(note)
      .then(refreshTodos)
      .then(listTodos)
      .catch(logError)
      .finally(closeDB)
    break;
  case 'update':
    updateById(note, text)
      .then(refreshTodos)
      .then(listTodos)
      .catch(logError)
      .finally(closeDB)
    break;
  case 'find':
    searchByString(note)
    .then(listTodos)
    .catch(logError)
    .finally(closeDB)
    break;
  case 'complete':
  completeById(note)
    .then(refreshTodos)
    .then(listTodos)
    .catch(logError)
    .finally(closeDB)
    break;
  case 'add':
    newTask(note)
    .then(refreshTodos)
    .then(listTodos)
    .catch(logError)
    .finally(closeDB)
    break;
  default:
    console.log('No matched cases')
    closeDB()
    break;
}

function listTodos (todos) {
  todos.forEach(function (todo) {
    console.log(`${todo.id}: ${todo.task}, you beautiful genius\n${todo.completed ? "It's completed, you charismatic hunk" : "It's not completed yet, you lithe charmer"}\n`);
  })
}

function refreshTodos(testDb) {
  return getAll(testDb);
}

function logError (err) {
  console.error('Uh oh!', err)
}

function getAll (testDb) {
  const db = testDb || devDb
  return db('todos').select()
}

function deleteById(id, testDb) {
  const db = testDb || devDb
  return db('todos')
    .where('id', id)
    .delete()
} 

function updateById(id, newTask, testDb) {
  const db = testDb || devDb
  return db('todos')
    .where('id', id)
    .update({task:newTask})
}

function searchByString(searchString, testDb) {
  const db = testDb || devDb
  return db('todos')
    .where('task', 'like', `%${searchString}%`)
}

function closeDB (testDb) {
  const db = testDb || devDb
  db.destroy()
}

function completeById(id, testDb) {
  const db = testDb || devDb
  return db('todos')
    .where('id', id)
    .update({completed:true})
}

function newTask(task, testDb){
  const db = testDb || devDb
    return db('todos')
      .insert({task:task})
} 

module.exports = {
  getAll,
  refreshTodos,
  deleteById,
  updateById,
  searchByString, 
  completeById,
  newTask
};